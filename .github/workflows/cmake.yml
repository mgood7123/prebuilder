name: CMake

on:
  push:
    branches: [ main ]
  workflow_dispatch:

env:
  # Customize the CMake build type here (Release, Debug, RelWithDebInfo, etc.)
  BUILD_TYPE: Debug

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macOS-latest]

    steps:
    - uses: actions/checkout@v2

    - name: Configure CMake
      # Configure CMake in a 'build' subdirectory. `CMAKE_BUILD_TYPE` is only required if you are using a single-configuration generator such as make.
      # See https://cmake.org/cmake/help/latest/variable/CMAKE_BUILD_TYPE.html?highlight=cmake_build_type
      run: cmake -B ${{github.workspace}}/build -DCMAKE_BUILD_TYPE=${{env.BUILD_TYPE}}

    - name: Build
      # Build your program with the given configuration
      run: cmake --build ${{github.workspace}}/build --config ${{env.BUILD_TYPE}}
      
    - name: list shared libs UNIX
      run: find ${{github.workspace}}/build -name \*.so
      if: matrix.os != 'windows-latest'
      
    - name: list shared libs WINDOWS
      run: find ${{github.workspace}}/build -name \*.so
      if: matrix.os == 'windows-latest'

    - name: clone
      run: git clone https://github.com/mgood7123/prebuilder-push-to-test ${{github.workspace}}/repo

    - name: create shared libs directory
      run: mkdir repo/prebuilt-${{ matrix.os }}
    
    - name: copy shared libs UNIX
      run: find ${{github.workspace}}/build -name \*.so -exec cp -v {} repo/prebuilt-${{ matrix.os }} \;
      if: matrix.os != 'windows-latest'
      
    - name: copy shared libs WINDOWS
      run: find ${{github.workspace}}/build -name \*.so -exec cp -v {} repo/prebuilt-${{ matrix.os }} \;
      if: matrix.os == 'windows-latest'

    - name: list libraries UNIX
      run: find repo/prebuilt-${{ matrix.os }}
      if: matrix.os != 'windows-latest'

    - name: list libraries WINDOWS
      run: find repo/prebuilt-${{ matrix.os }}
      if: matrix.os == 'windows-latest'
