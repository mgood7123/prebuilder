name: CMake

on:
  push:
    branches: [ main ]

concurrency:
  group: build
  cancel-in-progress: true

env:
  # Customize the CMake build type here (Release, Debug, RelWithDebInfo, etc.)
  BUILD_TYPE: Debug
  
  # Customize the build folder here
  # IMPORTANT: this MUST NOT conflict with any existing folders
  
  GITHUB_ACTIONS_PREBUILD_BUILD_FOLDER: GITHUB_ACTIONS_PREBUILD_BUILD_FOLDER

  # Customize the output folder here
  # IMPORTANT: this MUST NOT conflict with any existing folders
  
  GITHUB_ACTIONS_PREBUILD_OUT_FOLDER: GITHUB_ACTIONS_PREBUILD_OUT_FOLDER

jobs:
  build:
    runs-on: ${{ matrix.os }}
    permissions:
      contents: write
    strategy:
      fail-fast: false
      max-parallel: 1
      matrix:
        include:
        
        - os: ubuntu-latest
          extension: so
          split: ./split_files_macOS.sh

        - os: macOS-latest
          extension: dylib
          split: ./split_files_macOS.sh

        - os: windows-latest
          extension: dll
          split: ./split_files_macOS.sh

    defaults:
      run:
        shell: bash

    steps:
    - uses: actions/checkout@v2
    
    - name: pull
      run: |
        git pull
        git status
        
    - name: Configure CMake
      # Configure CMake in a 'build' subdirectory. `CMAKE_BUILD_TYPE` is only required if you are using a single-configuration generator such as make.
      # See https://cmake.org/cmake/help/latest/variable/CMAKE_BUILD_TYPE.html?highlight=cmake_build_type
      run: |
        cmake -D GITHUB_ACTIONS_PREBUILD_EXTENSION=${{matrix.extension}} -B ${{env.GITHUB_ACTIONS_PREBUILD_BUILD_FOLDER}} -DCMAKE_BUILD_TYPE=${{env.BUILD_TYPE}}
        git status

    - name: Build
      # Build your program with the given configuration
      run: |
        cmake --build ${{env.GITHUB_ACTIONS_PREBUILD_BUILD_FOLDER}} --config ${{env.BUILD_TYPE}}
        git status
      
    - name: list libs
      run: |
        find ${{env.GITHUB_ACTIONS_PREBUILD_BUILD_FOLDER}} -name \*.${{matrix.extension}}
        git status
      
    - name: git config global
      run: |
        git config --global user.email "GITHUB_ACTIONS_PREBUILD";
        git config --global user.name "GITHUB_ACTIONS_PREBUILD"
        git status
        
    - name: mkdir ${{env.GITHUB_ACTIONS_PREBUILD_OUT_FOLDER}}
      continue-on-error: true
      run: |
        mkdir ${{env.GITHUB_ACTIONS_PREBUILD_OUT_FOLDER}}
        git status
        
    - name: mkdir ${{env.GITHUB_ACTIONS_PREBUILD_OUT_FOLDER}}/${{matrix.os}}
      continue-on-error: true
      run: |
        mkdir ${{env.GITHUB_ACTIONS_PREBUILD_OUT_FOLDER}}/${{matrix.os}}
        git status

    - name: copy files
      run: |
        find ${{env.GITHUB_ACTIONS_PREBUILD_BUILD_FOLDER}} -name \*.${{matrix.extension}} -exec cp -v {} ${{env.GITHUB_ACTIONS_PREBUILD_OUT_FOLDER}}/${{matrix.os}}/ \;
        git status
        
    - name: rm build
      run: |
        rm -rf ${{env.GITHUB_ACTIONS_PREBUILD_BUILD_FOLDER}}
        git status
        
    - name: split files
      run: |
        chmod +x ${{matrix.split}}
        ${{matrix.split}} ${{matrix.extension}}
        git status

    - name: add prebuilt
      run: |
        git add -Av ${{env.GITHUB_ACTIONS_PREBUILD_OUT_FOLDER}}/${{matrix.os}}
        git status
        
    - name: commit
      continue-on-error: true
      run: |
        git commit -m "push prebuilts for ${{matrix.os}}"
        git status
        
    - name: push
      run: |
        git push
        git status
