name: CMake

on:
  push:
    branches: [ main ]
  workflow_dispatch:

env:
  # Customize the CMake build type here (Release, Debug, RelWithDebInfo, etc.)
  BUILD_TYPE: Debug

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os:  [ubuntu-latest, windows-latest, macOS-latest]
        include:
        - os: ubuntu-latest
          lib: .so
          ls: find
          filter: -name
          wildcard: \\\*
          out: ${{github.workspace}}/repo/prebuilt-${{ matrix.os }}
          build: ${{github.workspace}}/build
          listLibs: ${{ matrix.ls }} ${{ matrix.filter }} ${{ matrix.wildcard }}.${{ matrix.lib }}
          copyLibs: ${{matrix.listLibs}} ${{matrix.build}} -exec cp -v {} ${{matrix.out}} \;
        - os: macOS-latest
          lib: .so
          ls: find
          filter: -name
          wildcard: \\\*
          out: ${{github.workspace}}/repo/prebuilt-${{ matrix.os }}
          build: ${{github.workspace}}/build
          listLibs: ${{ matrix.ls }} ${{ matrix.filter }} ${{ matrix.wildcard }}.${{ matrix.lib }}
          copyLibs: ${{matrix.listLibs}} ${{matrix.build}} -exec cp -v {} ${{matrix.out}} \;
        - os: windows-latest
          lib: .dll
          ls: Get-ChildItem -r -path
          filter: -filter
          wildcard: \*
          out: ${{github.workspace}}/repo/prebuilt-${{ matrix.os }}
          build: ${{github.workspace}}/build
          listLibs: ${{ matrix.ls }} ${{ matrix.filter }} ${{ matrix.wildcard }}.${{ matrix.lib }}
          copyLibs: ${{matrix.listLibs}} ${{matrix.build}} -exec cp -v {} ${{matrix.out}} \;

    steps:
    - uses: actions/checkout@v2

    - name: Configure CMake
      # Configure CMake in a 'build' subdirectory. `CMAKE_BUILD_TYPE` is only required if you are using a single-configuration generator such as make.
      # See https://cmake.org/cmake/help/latest/variable/CMAKE_BUILD_TYPE.html?highlight=cmake_build_type
      run: cmake -B ${{matrix.build}} -DCMAKE_BUILD_TYPE=${{env.BUILD_TYPE}}

    - name: Build
      # Build your program with the given configuration
      run: cmake --build ${{matrix.build}} --config ${{env.BUILD_TYPE}}
      
    - name: list libs
      run: ${{matrix.listLibs}} ${{matrix.build}}
      
    - name: clone
      run: git clone https://github.com/mgood7123/prebuilder-push-to-test ${{github.workspace}}/repo

    - name: create shared libs directory
      run: mkdir ${{matrix.out}}
    
    - name: copy shared libs
      run: ${{matrix.copyLibs}}

    - name: list libs
      run: ${{ matrix.listLibs }} ${{matrix.out}}
